const images=Array.from(Array(12).keys()),board=document.querySelector(".board__inner");class Game{constructor(){this.gameSize=4,board.addEventListener("click",this._cardClick.bind(this)),this._initGame()}_initGame(){this.cardList=Array.from(Array(this.gameSize).keys()),this.cards=[...this.cardList,...this.cardList].sort(((s,t)=>Math.random()-.5)),this.moves=[],this.matches=0,this.cards.forEach(((s,t)=>{const a=document.createElement("div");a.classList.add("card"),a.dataset.card=t,a.innerHTML=`\n          <div class="card__inner">\n            <div class="card__back"></div>\n            <div class="card__front">\n                <img src="images/bird_Bird${images[s]+1}.png" />\n            </div>\n          </div>`,board.append(a)})),console.log(this.cards)}_cardClick(s){const t=s.target.closest(".card"),a=t.dataset.card;if(!(this.moves.find((s=>s===a))||this.moves.length>=2||t.classList.contains("matched")))return this.moves.push(a),t.classList.add("flipped"),this.moves.length>=2?this._checkMatch():void 0}_checkMatch(){const[s,t]=this.moves,a=document.querySelectorAll(".card");this.cards[s]===this.cards[t]&&(console.log("MATCH!!"),this.matches++,a[s].classList.add("matched"),a[t].classList.add("matched")),setTimeout((()=>{a.forEach((s=>s.classList.remove("flipped"))),this.moves=[]}),2e3)}}const game=new Game;